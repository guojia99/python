# 返回字符串 ‘abCdEfg’ 的全部大写、全部小写和大下写互换形式。
# 判断字符串 ‘abCdEfg’ 是否首字母大写，字母是否全部小写，字母是否全部大写。
# 返回字符串 ‘this is python’ 首字母大写以及字符串内每个单词首字母大写形式。
# 判断字符串 ‘this is python’ 是否以 ‘this’ 开头，又是否以 ‘python’ 结尾。
# 返回字符串 ‘this is python’ 中 ‘is’ 的出现次数。
# 返回字符串 ‘this is python’ 中 ‘is’ 首次出现和最后一次出现的位置。
# 将字符串 ‘this is python’ 切片成3个单词。
# 返回字符串 ‘blog.csdn.net/xufive/article/details/102946961’ 按路径分隔符切片的结果。
# 将字符串 ‘2.72, 5, 7, 3.14’ 以半角逗号切片后，再将各个元素转成浮点型或整形。
# 判断字符串 ‘adS12K56’ 是否完全为字母数字，是否全为数字，是否全为字母，是否全为ASCII码。
# 将字符串 ‘there is python’ 中的 ‘is’ 替换为 ‘are’。
# 清除字符串 ‘\t python \n’ 左侧、右侧，以及左右两侧的空白字符。
# 将三个全英文字符串（比如，‘ok’, ‘hello’, ‘thank you’）分行打印，实现左对齐、右对齐和居中对齐效果。
# 将三个字符串（比如，‘Hello, 我是David’, ‘OK, 好’, ‘很高兴认识你’）分行打印，实现左对齐、右对齐和居中效果。
# 将三个字符串 ‘15’, ‘127’, ‘65535’ 左侧补0成同样长度。
# 提取 url 字符串 ‘https://blog.csdn.net/xufive’ 中的协议名。
# 将列表 [‘a’,‘b’,‘c’] 中各个元素用’|'连接成一个字符串。
# 将字符串 ‘abc’ 相邻的两个字母之间加上半角逗号，生成新的字符串。
# 从键盘输入手机号码，输出形如 ‘Mobile: 186 6677 7788’ 的字符串。
# 从键盘输入年月日时分秒，输出形如 ‘2019-05-01 12:00:00’ 的字符串。
# 给定两个浮点数 3.1415926 和 2.7182818，格式化输出字符串 ‘pi = 3.1416, e = 2.7183’。
# 将 0.00774592 和 356800000 格式化输出为科学计数法字符串。
# 将十进制整数 240 格式化为八进制和十六进制的字符串。
# 将十进制整数 240 转为二进制、八进制、十六进制的字符串。
# 将字符串 ‘10100’ 按照二进制、八进制、十进制、十六进制转为整数。
# 求二进制整数1010、八进制整数65、十进制整数52、十六进制整数b4的和。
# 将列表 [0,1,2,3.14,‘x’,None,’’,list(),{5}] 中各个元素转为布尔型。
# 返回字符 ‘a’ 和 ‘A’ 的ASCII编码值。
# 返回ASCII编码值为 57 和 122 的字符。
