import numpy as np
import sys


class W(object):
    def __init__(self) -> None:
        self.points: list = []
        self.highest_value: float = 0
        self.min_value: float = sys.maxsize
        self.valleys_diff: float = 0
        self.peaks_diff: float = 0
        self._valleys_diff = 0
        self._peaks_diff = 0
        self.distamce1: float = 0
        self.distamce2: float = 0
        self._distance_1: float = 0
        self._distance_2: float = 0
        ...

    def __str__(self) -> str: ...

    def _set(self) -> None: ...

    def __set_diffs(self) -> None: ...

    def __set_distance(self) -> None: ...

    def add(self, point: (int, float)) -> None: ...

    def is_full(self) -> bool: ...

    def is_distance_symmetric(self) -> bool: ...


class Ws(object):
    def __init__(self) -> None:
        self.avg: float = None
        self.std: float = None
        self.q: list = []
        ...

    def __len__(self) -> int: ...

    def set_init(self) -> None: ...

    def get_density(self) -> float: ...


class Density(object):
    def __init__(self, image: np.ndarray) -> None:
        self.image: np.ndarray = image
        self.x: int = None
        self.y: int = None
        self.xx: np.ndarray = None
        self.radial_count: np.ndarray = None
        self.valleys: np.ndarray = None
        self.peaks: np.ndarray = None
        self.avg_list: np.ndarray = None
        ...

    def __is_clear(self) -> bool: ...

    def write_2D(self, out_path: str) -> None:...

    def __sma(self, data: np.ndarray, N: int = 5) -> np.ndarray: ...

    def get(self) -> float: ...


class DensityTool(object):
    MAX_H: int = ...
    MAX_W: int = ...

    def __init__(self, image: np.ndarray = ..., enhance: bool = False) -> None:
        self.bro_cut_data: list = ...
        self.broadwise: float = ...
        self.mer_cut_data: list = ...
        self.meridians: float = ...
        self.image_rot: np.ndarray = ...
        self.image: np.ndarray = ...
        ...

    def __cut_image(self, image: np.ndarray = ...) -> list: ...

    def set_data(self) -> None: ...

    def get(self) -> dict: ...
